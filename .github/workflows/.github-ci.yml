name: Pytest

on:
  repository_dispatch:
    types: [run-tests]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    # - name: Install dependencies (adapterMode=1 + CLI)
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements1.txt
        
    - name: Install dependencies (adapterMode=0)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements0.txt
    
    - name: Get data from webhook
      run: |
        echo "TEST_RUN_ID=${{ github.event.client_payload.test_run_id }}" >> $GITHUB_ENV
        echo "PROJECT_ID=${{ github.event.client_payload.project_id }}" >> $GITHUB_ENV
        echo "CONFIGURATION_IDS=${{ github.event.client_payload.configuration_id[0] }}" >> $GITHUB_ENV
    
    - name: Run tests
      run: |
        export TMS_TOKEN=${{ secrets.TMS_PRIVATE_TOKEN }}
        pytest \
          --tmsConfigurationId=$CONFIGURATION_IDS \
          --tmsProjectId=$PROJECT_ID \
          --tmsPrivateToken=${{ secrets.TMS_PRIVATE_TOKEN }} \
          --tmsUrl=${{ secrets.TMS_URL }} \
          --tmsTestRunId=$TEST_RUN_ID \
          --tmsAdapterMode=0 \
          --tmsCertValidation=false \
          --testit

    # - name: Setup TestIT filter
    #   run: |
    #     export TMS_TOKEN=${{ secrets.TMS_PRIVATE_TOKEN }}
    #     testit autotests_filter \
    #       --url ${{ secrets.TMS_URL }} \
    #       --configuration-id $CONFIGURATION_IDS \
    #       --testrun-id $TEST_RUN_ID \
    #       --framework pytest \
    #       --disable-cert-validation \
    #       --output tmp/filter.txt
    
    # - name: Run filtered tests
    #   run: |
    #     pytest "$(cat tmp/filter.txt)" \
    #       --tmsConfigurationId=$CONFIGURATION_IDS \
    #       --tmsProjectId=$PROJECT_ID \
    #       --tmsPrivateToken=${{ secrets.TMS_PRIVATE_TOKEN }} \
    #       --tmsUrl=${{ secrets.TMS_URL }} \
    #       --tmsTestRunId=$TEST_RUN_ID \
    #       --tmsAdapterMode=1 \
    #       --tmsCertValidation=false \
    #       --testit
    
    